// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Data$Covid_stats = require("./Data.bs.js");

var pageState = {
  col: /* State */0,
  dir: /* Ascending */0,
  period: /* PastWeek */1,
  indices: []
};

function to100K(x, index) {
  return x / Caml_array.caml_array_get(Data$Covid_stats.csv.states, index).population * 100000.0;
}

function makeRow(index) {
  console.log(String(index));
  var tr = document.createElement("tr");
  var td1 = document.createElement("td");
  td1.innerHTML = Caml_array.caml_array_get(Data$Covid_stats.csv.states, index).name;
  var td2 = document.createElement("td");
  td2.innerHTML = Caml_array.caml_array_get(Data$Covid_stats.csv.states, index).totalCases.toFixed(0);
  var td3 = document.createElement("td");
  td3.innerHTML = to100K(Caml_array.caml_array_get(Data$Covid_stats.csv.states, index).totalCases, index).toFixed(2);
  tr.appendChild(td1);
  tr.appendChild(td2);
  tr.appendChild(td3);
  var table = document.getElementById("tableBody");
  if (!(table == null)) {
    table.appendChild(tr);
    return ;
  }
  
}

function drawTable(param) {
  console.log("Checking states length: ", Data$Covid_stats.csv.states.length);
  pageState.indices = Belt_Array.makeBy(Data$Covid_stats.csv.states.length, (function (i) {
          return i;
        }));
  Belt_Array.map(pageState.indices, makeRow);
  
}

exports.pageState = pageState;
exports.to100K = to100K;
exports.makeRow = makeRow;
exports.drawTable = drawTable;
/* No side effect */
