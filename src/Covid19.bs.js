// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Data$Covid_stats = require("./Data.bs.js");

var pageState = {
  col: /* State */0,
  dir: /* Ascending */0,
  period: /* PastWeek */1,
  indices: []
};

function byStateName(indexA, indexB) {
  var states = Data$Covid_stats.csv.states;
  var result = Caml_array.caml_array_get(states, indexA).name > Caml_array.caml_array_get(states, indexB).name ? 1 : (
      Caml_array.caml_array_get(states, indexA).name < Caml_array.caml_array_get(states, indexB).name ? -1 : 0
    );
  if (pageState.dir === /* Ascending */0) {
    return result;
  } else {
    return -result | 0;
  }
}

function byTotal(indexA, indexB) {
  var states = Data$Covid_stats.csv.states;
  var totalA = pageState.period === /* All */0 ? Caml_array.caml_array_get(states, indexA).totalCases : Caml_array.caml_array_get(states, indexA).pastWeekCases;
  var totalB = pageState.period === /* All */0 ? Caml_array.caml_array_get(states, indexB).totalCases : Caml_array.caml_array_get(states, indexB).pastWeekCases;
  var valueA = totalA / (
    pageState.col === /* Total */1 ? 1.0 : Caml_array.caml_array_get(states, indexA).population * 100000.0
  );
  var valueB = totalB / (
    pageState.col === /* Total */1 ? 1.0 : Caml_array.caml_array_get(states, indexB).population * 100000.0
  );
  var result = valueA > valueB || valueA >= valueB ? 1 : 0;
  if (pageState.dir === /* Ascending */0) {
    return result;
  } else {
    return -result | 0;
  }
}

function to100K(x, index) {
  return x / Caml_array.caml_array_get(Data$Covid_stats.csv.states, index).population * 100000.0;
}

function makeRow(index) {
  console.log(String(index));
  var tr = document.createElement("tr");
  var td1 = document.createElement("td");
  td1.innerHTML = Caml_array.caml_array_get(Data$Covid_stats.csv.states, index).name;
  var td2 = document.createElement("td");
  td2.innerHTML = Caml_array.caml_array_get(Data$Covid_stats.csv.states, index).totalCases.toFixed(0);
  var td3 = document.createElement("td");
  td3.innerHTML = to100K(Caml_array.caml_array_get(Data$Covid_stats.csv.states, index).totalCases, index).toFixed(2);
  tr.appendChild(td1);
  tr.appendChild(td2);
  tr.appendChild(td3);
  var table = document.getElementById("tableBody");
  if (!(table == null)) {
    table.appendChild(tr);
    return ;
  }
  
}

function renderFirstData(param) {
  console.log("Checking states length: ", Data$Covid_stats.csv.states.length);
  if (Data$Covid_stats.csv.states.length !== 0) {
    pageState.indices = Belt_Array.makeBy(Data$Covid_stats.csv.states.length, (function (i) {
            return i;
          }));
    Belt_Array.map(pageState.indices, makeRow);
  } else {
    setTimeout(renderFirstData, 1000);
  }
  
}

console.log("About to fetch data");

Data$Covid_stats.fetchData(undefined);

renderFirstData(undefined);

exports.pageState = pageState;
exports.byStateName = byStateName;
exports.byTotal = byTotal;
exports.to100K = to100K;
exports.makeRow = makeRow;
exports.renderFirstData = renderFirstData;
/*  Not a pure module */
